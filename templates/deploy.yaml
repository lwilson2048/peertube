apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "peertube.fullName" . }}
  labels:
    app: {{ template "peertube.fullName" . }}
    chart: {{ template "peertube.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "peertube.fullName" . }}
      release: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ template "peertube.fullName" . }}
        release: {{ .Release.Name }}
    spec:
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        # /!\ Prefer to use the PeerTube admin interface to set the following configurations /!\
        - name: PEERTUBE_SIGNUP_ENABLED
          value: {{ .Values.config.signupEnabled | quote }}
        - name: PEERTUBE_TRANSCODING_ENABLED
          value: {{ .Values.config.transcodingEnabled | quote }}
        - name: PEERTUBE_CONTACT_FORM_ENABLED
          value: {{ .Values.config.contactFormEnabled | quote }}

        # Database / Postgres service configuration
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.postgresDatabase | quote }}
        - name: PEERTUBE_DB_SSL
          value: "false"

        - name: PEERTUBE_DB_HOSTNAME
          {{- if .Values.deps.pg.managed }}
          value: {{ .Values.postgresql.fullnameOverride | quote }}
          {{- else }}
          value: {{ required "deps.pg.hostname required unless deps.pg.managed is true" .Values.deps.pg.hostname | quote }}
          {{- end }}
        - name: PEERTUBE_DB_USERNAME
          {{- if .Values.deps.pg.managed }}
          value: {{ default "postgres" .Values.postgresql.postgresUser | quote }}
          {{- else }}
          value: {{ required "deps.pg.username required unless deps.pg.managed is true" .Values.deps.pg.username | quote }}
          {{- end }}
        - name: PEERTUBE_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              {{- if .Values.deps.pg.managed }}
              name: {{ .Values.postgresql.fullnameOverride | quote }}
              {{- else }}
              name: {{ template "peertube.postgresqlSecretName" . }}
              {{- end }}
              key: postgresql-password

        - name: PEERTUBE_REDIS_HOSTNAME
          {{- if .Values.deps.redis.managed }}
          value: "{{ .Values.redis.fullnameOverride }}-master"
          {{- else }}
          value: {{ required "deps.redis.hostname required unless deps.redis.managed is true" .Values.deps.redis.hostname | quote }}
          {{- end }}

        # E-mail configuration
        # If you use a Custom SMTP server
        - name: PEERTUBE_SMTP_DISABLE_STARTTLS
          value: "false"

        # Default to Postfix service name "postfix" in docker-compose.yml
        # May be the hostname of your Custom SMTP server
        - name: PEERTUBE_SMTP_HOSTNAME
          value: {{ required "deps.smtp.hostname required" .Values.deps.smtp.hostname | quote }}
        - name: PEERTUBE_SMTP_USERNAME
          valueFrom:
            secretKeyRef:
              {{- if .Values.deps.smtp.existingSecret }}
              name: {{ .Values.deps.smtp.existingSecret }}
              {{- else }}
              name: {{ template "peertube.smtpSecretName" . }}
              {{- end }}
              key: un
        - name: PEERTUBE_SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              {{- if .Values.deps.smtp.existingSecret }}
              name: {{ .Values.deps.smtp.existingSecret | quote }}
              {{- else }}
              name: {{ template "peertube.smtpSecretName" . }}
              {{- end }}
              key: pw
        # Default to 25
        - name: PEERTUBE_SMTP_PORT
          value: {{ required "deps.smtp.port required" .Values.deps.smtp.port | quote }}
        # Default to nopreply@<MY DOMAIN>
        - name: PEERTUBE_SMTP_FROM
          value: {{ required "deps.smtp.from required" .Values.deps.smtp.from | quote }}
        - name: PEERTUBE_SMTP_TLS
          value: {{ .Values.deps.smtp.tls.enabled | quote }}
        - name: PEERTUBE_ADMIN_EMAIL
          value: {{ required "adminEmail required" .Values.adminEmail | quote }}

        # Server configuration
        # If you need more than one IP as trust_proxy
        # pass them as a comma separated array:
        - name: PEERTUBE_TRUST_PROXY
          value: "[\"127.0.0.1\", \"loopback\", \"172.18.0.0/16\"]"
        - name: PEERTUBE_WEBSERVER_HOSTNAME
          value: {{ required "webserver.hostname required" .Values.webserver.hostname | quote }}
        - name: PEERTUBE_WEBSERVER_PORT
          {{- if .Values.ingress.tls.enabled }}
          value: "443"
          {{- else }}
          value: "80"
          {{- end }}
        - name: PEERTUBE_WEBSERVER_HTTPS
          value: {{ .Values.ingress.tls.enabled | quote }}
        ports:
          - name: svc2pod
            containerPort: 9000
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: svc2pod
        readinessProbe:
          httpGet:
            path: /
            port: svc2pod
        volumeMounts:
        - name: data
          mountPath: /data
      volumes:
      - name: data
        {{- if .Values.pvc.enabled }}
        persistentVolumeClaim:
          {{- if .Values.pvc.existingClaim }}
          claimName: {{ .Values.pvc.existingClaim }}
          {{- else }}
          claimName: {{ template "peertube.fullName" . }}
          {{- end }}
        {{- else }}
        emptyDir: {}
        {{- end }}
